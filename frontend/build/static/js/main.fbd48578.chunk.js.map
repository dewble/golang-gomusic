{"version":3,"sources":["ProductCards.js","Navigation.js","CreditCards.js","modalwindows.js","About.js","orders.js","App.js","reportWebVitals.js","index.js"],"names":["Card","priceColor","this","props","promo","sellPrice","promotion","price","className","src","img","alt","imgalt","productname","desc","onClick","showBuyModal","ID","React","Component","CardContainer","state","cards","fetch","location","then","res","json","result","setState","items","map","card","id","Navigation","type","ariaexpanded","user","name","role","loggedin","buildLoggedInMenu","showModalWindow","to","SUCCESSSTATE","FAILEDSTATE","CreditCardForm","handleSubmit","bind","handleInputChange","value","status","usersavedcard","remembercardcheck","htmlFor","onSubmit","placeholder","onChange","style","base","operation","renderCreditCardInformation","event","a","preventDefault","useExisting","stripe","createToken","token","console","log","method","headers","body","JSON","stringify","customer_id","product_id","productid","sell_price","rememberCard","undefined","remember","ok","target","renderSuccess","renderFailure","CreditCardInformation","show","CCFormWithStripe","injectStripe","apiKey","SingInForm","handleChange","errormessage","message","length","handleNewUser","RegistrationForm","SignInModalWindow","showRegistrationForm","modalBody","Modal","tabIndex","isOpen","showModal","toggle","ModalHeader","ModalBody","BuyModalWindow","seperator","About","Order","days","OrderContainer","orders","order","App","cookie","getJSON","showSignInModal","handleSignedIn","handleSignedOut","showSignInModalWindow","showBuyModalWindow","toggleSignInModalWindow","toggleBuyModalWindow","newState","Object","assign","set","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fbd48578.chunk.js","sourcesContent":["import React from 'react';\n\n// 개별 상품을 나타내는 Card 컴포넌트\nclass Card extends React.Component {\n    render() {\n        const priceColor = (this.props.promo)? \"text-danger\" : \"text-dark\";\n        const sellPrice = (this.props.promo)?this.props.promotion:this.props.price;\n        return (\n            <div className=\"col-md-6 col-lg-4 d-flex align-items-stretch\">\n                <div className=\"card mb-3\">\n                    <img className=\"card-img-top\" src={this.props.img} alt={this.props.imgalt} />\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">{this.props.productname}</h4>\n                        Price: <strong className={priceColor}>{sellPrice}</strong>\n                        <p className=\"card-text\">{this.props.desc}</p>\n                        <a className=\"btn btn-success text-white\" onClick={()=>{this.props.showBuyModal(this.props.ID,sellPrice)}}>Buy</a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// 상품 목록 전체를 나타내는 컴포넌트\nexport default class CardContainer extends React.Component {\n    constructor(props) {\n        // 부모 컴포넌트로 props 전달\n        super(props);\n        // 컴포넌트의 state 객체 초기화\n        this.state = {\n            cards: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(this.props.location)\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({\n                    cards: result\n                });\n            });\n    }\n\n    render() {\n        const cards = this.state.cards;\n        let items = cards.map(\n            card => <Card key={card.id} {...card} promo={this.props.promo} showBuyModal={this.props.showBuyModal}/>\n        );\n        return (\n            <div>\n                <div className=\"mt-5 row\">\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\n\n// 로그인하지 않은 사용자에게 표시\nexport default class Navigation extends React.Component{\n\n    // 이미 로그인한 사용자에게 표시할 컴포넌트 작성\n    // Welcome 드롭 다운 버튼과 로그아웃 버튼 출력\n    buildLoggedInMenu(){\n        return (\n            <div className=\"navbar-brand order-1 text-whithe my-auto\">\n                <div className=\"btn-group\">\n                    <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" ariaexpanded=\"false\">\n                        Welcome {this.props.user.name}\n                    </button>\n                    <div className=\"dropdown-menu\">\n                        <a className=\"btn dropdown-item\" role=\"button\">Sign Out</a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render(){\n        // 메뉴를 표현하는 코드\n        // 로그인하지 않은 사용자에게 표시하는 Navigation 컴포넌트\n        \n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-success fixed-top\">\n                    <div className=\"container\">\n                        {/* 로그인한 사용자에게 표시할 탐색 메뉴*/} \n                        {\n                            this.props.user.loggedin ? this.buildLoggedInMenu() : <button type=\"button\" className=\"navbar-brand order-1 btn btn-success\"  onClick={() => { this.props.showModalWindow();}}>Sign in</button>\n                        }\n                        <div className=\"navbar-collapse\" id=\"navbarNavAltMarkup\">\n                            <div className=\"navbar-nav\">\n                                <NavLink className=\"nav-item nav-link\" to=\"/\">Home</NavLink>\n                                <NavLink className=\"nav-item nav-link\" to=\"/promos\">Promotions</NavLink>\n                                {/*주문 내역 페이지로 이동하는 링크 추가*/} \n                                {this.props.user.loggedin ? <NavLink className=\"nav-item nav-link\" to=\"/myorders\">My Orders</NavLink> : null}\n                                <NavLink className=\"nav-item nav-link\" to=\"/about\">About</NavLink>\n\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { injectStripe, StripeProvider, Elements, CardElement } from 'react-stripe-elements';\n\nconst INITIALSTATE = \"INITIAL\", SUCCESSSTATE = \"COMPLETE\", FAILEDSTATE = \"FAILED\";\n\nclass CreditCardForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.state = {\n            value: '',\n            status: INITIALSTATE\n        };\n    }\n\n    renderCreditCardInformation() {\n        const style = {\n            base: {\n                'fontSize': '20px',\n                'color': '#495057',\n                'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n            }\n        };\n        const usersavedcard = <div>\n            <div className=\"form-row text-center\">\n                <button type=\"button\" className=\"btn  btn-outline-success text-center mx-auto\">Use saved card?</button>\n            </div>\n            <hr />\n        </div>\n\n        const remembercardcheck = <div className=\"form-row form-check text-center\">\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remembercardcheck\" />\n            <label className=\"form-check-label\" htmlFor=\"remembercardcheck\">\n                Remember Card?\n            </label>\n        </div>;\n        // 뷰 반환\n        return (\n            <div>\n                {usersavedcard}\n                <h5 className=\"mb-4\">Payment Info</h5>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"cc-name\">Name On Card:</label>\n                            <input id=\"cc-name\" name='cc-name' className=\"form-control\" placeholder='Name on Card' onChange={this.handleInputChange} type='text' />\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"card\">Card Information:</label>\n                            <CardElement id=\"card\" className=\"form-control\" style={style} />\n                        </div>\n                    </div>\n                    {remembercardcheck}\n                    <hr className=\"mb-4\" />\n                    <button type=\"submit\" className=\"btn btn-success btn-large\" >{this.props.operation}</button>\n                </form>\n            </div>\n        );\n    }\n\n    renderSuccess() {\n        return (\n            <div>\n                <h5 className=\"mb-4 text-success\">Request Successfull....</h5>\n                <button type=\"submit\" className=\"btn btn-success btn-large\" data-dismiss=\"modal\">Ok</button>\n            </div>\n        );\n    }\n\n    renderFailure() {\n        return (\n            <div>\n                <h5 className=\"mb-4 text-danger\"> Credit card information invalid, try again or exit</h5>\n                {this.renderCreditCardInformation()}\n            </div>\n        );\n    }\n\n    async handleSubmit(event) {\n\n        event.preventDefault();\n        let id = \"\";\n\n        // 저장된 카드 사용이 아니라면 스트라이프에 토큰을 요청한다.\n        if (!this.state.useExisting) {\n            // Strip API를 통해 토큰 발급\n            let { token } = await this.props.stripe.createToken({ name: this.state.name });\n            if (token == null) {\n                console.log(\"invalid token\");\n                this.setState({ status: FAILEDSTATE });\n                return;\n            }\n            id = token.id;\n        }\n        \n        // 요청을 생성하고 백엔드로 보낸다.\n        let response = await fetch(\"/users/charge\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                token: id,\n                customer_id: this.props.user,\n                product_id: this.props.productid,\n                sell_price: this.props.price,\n                rememberCard: this.state.remember !== undefined,\n                useExisting: this.state.useExisting\n            })\n        });\n\n        // 응답이 ok면 작업 성공\n        if (response.ok) {\n            console.log(\"Purchase Complete!\");\n            this.setState({ status: SUCCESSSTATE });\n        } else {\n            this.setState({ status: FAILEDSTATE });\n        }\n    }\n\n\n    handleInputChange(event) {\n        this.setState({\n            value: event.target.value\n        })\n    }\n\n    render() {\n\n        let body = null;\n        switch (this.state.status) {\n            case SUCCESSSTATE:\n                body = this.renderSuccess();\n                break;\n            case FAILEDSTATE:\n                body = this.renderFailure();\n                break;\n            default:\n                body = this.renderCreditCardInformation();\n        }\n\n        return (\n            <div>\n                {body}\n            </div>\n        );\n    }\n}\nexport default function CreditCardInformation(props) {\n    if(!props.show) {\n        return <div/>;\n    }\n    // 스트라이프 API를 사용해 CreditCardForm를 추가하면 createToken() 메서드를 호출할 수 있다.\n    const CCFormWithStripe = injectStripe(CreditCardForm);\n    return (\n        <div>\n            {/*stripe provider*/}\n            <StripeProvider apiKey=\"pk_test_51JqdjpHqNVgKzGGZFZuBvitqdRPC5iN3nwYvdinqY2n5QcfozKRxCYT3sVQVRh26opBOFXz0IvbahgPC6IL7rqWh00ADHiTRK6\">\n                <Elements>\n                    <CCFormWithStripe operation={props.operation} />\n                </Elements>\n            </StripeProvider>\n        </div>\n    );\n}\n\n","import React from 'react';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport CreditCardInformation from './CreditCards';\n\n// 로그인 폼 컴포넌트\nclass SingInForm extends React.Component {\n    constructor(props) {\n        super(props);\n        // 사용자가 데이터를 입력하면 호출되는 함수\n        this.handleChange = this.handleChange.bind(this);\n        // 폼을 제출하면 호출되는 함수\n        this.handleSubmit = this.handleSubmit.bind(this);\n        // 로그인 실패시 errormessage 필드에 메시지를 저장한다.        \n        this.state = {\n            errormessage: ''\n        }\n    }\n\n    handleChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(JSON.stringify(this.state));\n    }\n\n\n    render() {\n        // 에러 메시지\n        let message = null;\n        // state에 에러 메시지가 있다면 출력\n        if (this.state.errormessage.length !== 0) {\n            message = <h5 className=\"mb-4 text-danger\">{this.state.errormessage}</h5>;\n\n        }\n        return (\n            <div>\n                {message}\n                <form onSubmit={this.handleSubmit}>\n                    <h5 className=\"mb-4\">Basic Info</h5>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email:</label>\n                        <input name=\"email\" type=\"email\" className=\"form-control\" id=\"email\"  onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pass\">Password:</label>\n                        <input name=\"password\" type=\"password\" className=\"form-control\" id=\"pass\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-row text-center\">\n                        <div className=\"col-12 mt-2\">\n                            <button type=\"submit\" className=\"btn btn-success btn-large\">Sign In</button>\n                        </div>\n                        <div className=\"col-12 mt-2\">\n                            <button type=\"submit\" className=\"btn btn-link text-info\" onClick={() => this.props.handleNewUser()}> New User? Register</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n}\n\n// 가입 폼 컴포넌트\nclass RegistrationForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        // 로그인 실패시 errormessage 필드에 메시지를 저장한다.\n        this.state = {\n            errormessage: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        event.preventDefault();\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state);\n    }\n\n    render() {\n        let message = null;\n        if (this.state.errormessage.length !== 0) {\n            message = <h5 className=\"mb-4 text-danger\">{this.state.errormessage}</h5>;\n\n        }\n        return (\n            <div>\n                {message}\n                <form onSubmit={this.handleSubmit}>\n                    <h5 className=\"mb-4\">Registration</h5>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">User Name:</label>\n                        <input id=\"username\" name='username' className=\"form-control\" placeholder='Jongmin Han' type='text'  onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email:</label>\n                        <input type=\"email\" name='email' className=\"form-control\" id=\"email\"  onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pass\">Password:</label>\n                        <input type=\"password\" name='pass1' className=\"form-control\" id=\"pass1\"  onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pass\">Confirm password:</label>\n                        <input type=\"password\" name='pass2' className=\"form-control\" id=\"pass2\"  onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-row text-center\">\n                        <div className=\"col-12 mt-2\">\n                            <button type=\"submit\" className=\"btn btn-success btn-large\">Register</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n// 로그인 폼을 포함하는 부모 모달 윈도우\nexport class SignInModalWindow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showRegistrationForm: false\n        };\n        this.handleNewUser = this.handleNewUser.bind(this);\n    }\n\n    handleNewUser() {\n        this.setState({\n            showRegistrationForm: true\n        });\n    }\n\n\n\n    render() {\n        // state 객체의 값에 따라 SignInForm이나 RegistrationForm 컴포넌트를 모달 윈도우에 추가한다.\n        let modalBody = <SingInForm handleNewUser={this.handleNewUser} />\n        if (this.state.showRegistrationForm === true) {\n            modalBody = <RegistrationForm />\n        }\n        return (\n            <Modal id=\"register\" tabIndex=\"-1\" role=\"dialog\" isOpen={this.props.showModal} toggle={this.props.toggle}>\n            <div role=\"document\">\n                <ModalHeader toggle={this.props.toggle} className=\"bg-success text-white\">\n                    Sign in\n                    {/*<button className=\"close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                     </button>*/}\n                </ModalHeader>\n                <ModalBody>\n                    {modalBody}\n                </ModalBody>\n            </div>\n        </Modal>\n        );\n    }\n}\n\nexport function BuyModalWindow(props) {\n    return (\n        <Modal id=\"buy\" tabIndex=\"-1\" role=\"dialog\" isOpen={props.showModal} toggle={props.toggle}>\n        <div role=\"document\">\n                <ModalHeader toggle={props.toggle} className=\"bg-success text-white\">\n                    Buy Item\n                </ModalHeader>\n                {/* 신용카드 결제 폼 */}\n                <ModalBody>\n                    <CreditCardInformation user={props.user} seperator={false} show={true} productid={props.productid} price={props.price} operation=\"Charge\" toggle={props.toggle} />\n                </ModalBody>\n            </div>\n        </Modal>\n    );\n} ","import React from 'react';\n\n\nexport default function About(props) {\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-12 order-lg-1\">\n                <h3 className=\"mb-4\">About the Go Music Store</h3>\n                <p>Go music is a modern online msucial instruments store</p>\n                <p>Explore how you can combine the power of React and Go, to build a fast and beautiful looking online store.</p>\n                <p>We will cover how to build this website step by step.</p>\n            </div>\n        </div>);\n}","import React from 'react';\n\nfunction Order(props) {\n    return (\n        <div className=\"col-12\">\n            <div className=\"card text-center\">\n                <div className=\"card-header\"><h5>{props.productname}</h5></div>\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"mx-auto col-6\">\n                            <img src={props.img} alt={props.imgalt} className=\"img-thumbnail float-left\" />\n                        </div>\n                        <div className=\"col-6\">\n                            <p className=\"card-text\">{props.desc}</p>\n                            <div className=\"mt-4\">\n                                Price: <strong>{props.price}</strong>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card-footer text-muted\">\n                    Purchased {props.days} days ago\n                </div>\n            </div>\n            <div className=\"mt-3\" />\n        </div>\n    );\n}\n\nexport default class OrderContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orders: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(this.props.location)\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({\n                    orders: result.orders\n                });\n            });\n    }\n\n    render() {\n\n        return (\n            <div className=\"row mt-5\">\n                {this.state.orders.map(order => <Order {...order} />)}\n            </div>\n        );\n    }\n}","// 지금까지 정의한 모든 컴포넌트 임포트\nimport React from 'react';\nimport CardContainer from './ProductCards';\nimport Nav from './Navigation';\nimport { SignInModalWindow, BuyModalWindow } from './modalwindows';\nimport About from './About';\nimport Orders from './orders';\n// react-router-dom 패키지에서 필요한 컴포넌트 임포트\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport cookie from 'js-cookie';\n\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const user = cookie.getJSON(\"user\") || {loggedin:false};\n    this.state = {\n      user: user,\n      showSignInModal: false,\n      showBuyModal: false\n    };\n    this.handleSignedIn = this.handleSignedIn.bind(this);\n    this.handleSignedOut = this.handleSignedOut.bind(this);\n    this.showSignInModalWindow = this.showSignInModalWindow.bind(this);\n    this.showBuyModalWindow = this.showBuyModalWindow.bind(this);\n    this.toggleSignInModalWindow = this.toggleSignInModalWindow.bind(this);\n    this.toggleBuyModalWindow = this.toggleBuyModalWindow.bind(this);\n  }\n\n  handleSignedIn(user) {\n    this.setState({\n      user: user\n    });\n  }\n\n  // 사용자가 로그아웃 했을 경우 쿠키에 해당 정보를 반영하여 사용자가 없음을 나타낸다\n  handleSignedOut(){\n    console.log(\"Call app signed out...\");\n    const state = this.state;\n    const newState = Object.assign({},state,{user:{loggedin:false}});\n    this.setState(newState);\n    cookie.set(\"user\",{loggedin:false});\n  }\n\n  // 구매와 로그인 모달 윈도우를 표시하는 Show 메서드\n  showSignInModalWindow(){\n    const state = this.state;\n    const newState = Object.assign({},state,{showSignInModal:true});\n    this.setState(newState);\n  }\n\n  showBuyModalWindow(id,price){\n    const state = this.state;\n    const newState = Object.assign({},state,{showBuyModal:true,productid:id,price:price});\n    this.setState(newState);\n  }\n\n  // 로그인과 구매 모달 윈도우의 toggle 메서드는 모달 윈도우의 출력 상태를 전환한다. \n  // 따라서 모달 윈도우의 출력 여부를 나타내는 state 객체의 불리언 필드 값을 반전시키면 된다.\n\n  toggleSignInModalWindow() {\n    const state = this.state;\n    const newState = Object.assign({},state,{showSignInModal:!state.showSignInModal});\n    this.setState(newState);\n  }\n\n  toggleBuyModalWindow(){\n    const state = this.state;\n    const newState = Object.assign({},state,{showBuyModal:!state.showBuyModal});\n    this.setState(newState); \n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Nav user={this.state.user} />\n            <div className='container pt-4 mt-4'>\n              <Route exact path=\"/\" render={() => <CardContainer location='cards.json' />} />\n              <Route path=\"/promos\" render={() => <CardContainer location='promos.json' promo={true}/>} />\n              {this.state.user.loggedin ? <Route path=\"/myorders\" render={()=><Orders location='user.json'/>}/> : null}\n              <Route path=\"/about\" component={About} />\n            </div>\n            <SignInModalWindow />\n            <BuyModalWindow />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}