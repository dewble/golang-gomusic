[{"/Users/dewble/Workspace/go/src/gomusic/frontend/src/index.js":"1","/Users/dewble/Workspace/go/src/gomusic/frontend/src/reportWebVitals.js":"2","/Users/dewble/Workspace/go/src/gomusic/frontend/src/App.js":"3","/Users/dewble/Workspace/go/src/gomusic/frontend/src/Navigation.js":"4","/Users/dewble/Workspace/go/src/gomusic/frontend/src/ProductCards.js":"5","/Users/dewble/Workspace/go/src/gomusic/frontend/src/modalwindows.js":"6","/Users/dewble/Workspace/go/src/gomusic/frontend/src/About.js":"7","/Users/dewble/Workspace/go/src/gomusic/frontend/src/orders.js":"8","/Users/dewble/Workspace/go/src/gomusic/frontend/src/CreditCards.js":"9"},{"size":452,"mtime":1636894991330,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1636895768571,"results":"12","hashOfConfig":"11"},{"size":3265,"mtime":1638978850446,"results":"13","hashOfConfig":"11"},{"size":2441,"mtime":1636896211680,"results":"14","hashOfConfig":"11"},{"size":1976,"mtime":1636895913048,"results":"15","hashOfConfig":"11"},{"size":7089,"mtime":1636984504549,"results":"16","hashOfConfig":"11"},{"size":552,"mtime":1636894654806,"results":"17","hashOfConfig":"11"},{"size":1674,"mtime":1636895706557,"results":"18","hashOfConfig":"11"},{"size":5766,"mtime":1638892065100,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cmiww8",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dewble/Workspace/go/src/gomusic/frontend/src/index.js",[],"/Users/dewble/Workspace/go/src/gomusic/frontend/src/reportWebVitals.js",[],"/Users/dewble/Workspace/go/src/gomusic/frontend/src/App.js",[],"/Users/dewble/Workspace/go/src/gomusic/frontend/src/Navigation.js",["40"],"import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\n\n// 로그인하지 않은 사용자에게 표시\nexport default class Navigation extends React.Component{\n\n    // 이미 로그인한 사용자에게 표시할 컴포넌트 작성\n    // Welcome 드롭 다운 버튼과 로그아웃 버튼 출력\n    buildLoggedInMenu(){\n        return (\n            <div className=\"navbar-brand order-1 text-whithe my-auto\">\n                <div className=\"btn-group\">\n                    <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" ariaexpanded=\"false\">\n                        Welcome {this.props.user.name}\n                    </button>\n                    <div className=\"dropdown-menu\">\n                        <a className=\"btn dropdown-item\" role=\"button\">Sign Out</a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render(){\n        // 메뉴를 표현하는 코드\n        // 로그인하지 않은 사용자에게 표시하는 Navigation 컴포넌트\n        \n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-success fixed-top\">\n                    <div className=\"container\">\n                        {/* 로그인한 사용자에게 표시할 탐색 메뉴*/} \n                        {\n                            this.props.user.loggedin ? this.buildLoggedInMenu() : <button type=\"button\" className=\"navbar-brand order-1 btn btn-success\"  onClick={() => { this.props.showModalWindow();}}>Sign in</button>\n                        }\n                        <div className=\"navbar-collapse\" id=\"navbarNavAltMarkup\">\n                            <div className=\"navbar-nav\">\n                                <NavLink className=\"nav-item nav-link\" to=\"/\">Home</NavLink>\n                                <NavLink className=\"nav-item nav-link\" to=\"/promos\">Promotions</NavLink>\n                                {/*주문 내역 페이지로 이동하는 링크 추가*/} \n                                {this.props.user.loggedin ? <NavLink className=\"nav-item nav-link\" to=\"/myorders\">My Orders</NavLink> : null}\n                                <NavLink className=\"nav-item nav-link\" to=\"/about\">About</NavLink>\n\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}","/Users/dewble/Workspace/go/src/gomusic/frontend/src/ProductCards.js",["41"],"import React from 'react';\n\n// 개별 상품을 나타내는 Card 컴포넌트\nclass Card extends React.Component {\n    render() {\n        const priceColor = (this.props.promo)? \"text-danger\" : \"text-dark\";\n        const sellPrice = (this.props.promo)?this.props.promotion:this.props.price;\n        return (\n            <div className=\"col-md-6 col-lg-4 d-flex align-items-stretch\">\n                <div className=\"card mb-3\">\n                    <img className=\"card-img-top\" src={this.props.img} alt={this.props.imgalt} />\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">{this.props.productname}</h4>\n                        Price: <strong className={priceColor}>{sellPrice}</strong>\n                        <p className=\"card-text\">{this.props.desc}</p>\n                        <a className=\"btn btn-success text-white\" onClick={()=>{this.props.showBuyModal(this.props.ID,sellPrice)}}>Buy</a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// 상품 목록 전체를 나타내는 컴포넌트\nexport default class CardContainer extends React.Component {\n    constructor(props) {\n        // 부모 컴포넌트로 props 전달\n        super(props);\n        // 컴포넌트의 state 객체 초기화\n        this.state = {\n            cards: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(this.props.location)\n            .then(res => res.json())\n            .then((result) => {\n                this.setState({\n                    cards: result\n                });\n            });\n    }\n\n    render() {\n        const cards = this.state.cards;\n        let items = cards.map(\n            card => <Card key={card.id} {...card} promo={this.props.promo} showBuyModal={this.props.showBuyModal}/>\n        );\n        return (\n            <div>\n                <div className=\"mt-5 row\">\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}","/Users/dewble/Workspace/go/src/gomusic/frontend/src/modalwindows.js",[],"/Users/dewble/Workspace/go/src/gomusic/frontend/src/About.js",[],"/Users/dewble/Workspace/go/src/gomusic/frontend/src/orders.js",[],"/Users/dewble/Workspace/go/src/gomusic/frontend/src/CreditCards.js",[],{"ruleId":"42","severity":1,"message":"43","line":18,"column":25,"nodeType":"44","endLine":18,"endColumn":72},{"ruleId":"42","severity":1,"message":"43","line":16,"column":25,"nodeType":"44","endLine":16,"endColumn":132},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]