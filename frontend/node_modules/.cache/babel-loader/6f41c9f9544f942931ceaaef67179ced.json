{"ast":null,"code":"var _jsxFileName = \"/Users/dewble/Workspace/React/gomusic/src/CreditCards.js\";\nimport React from 'react';\nimport { jnjectStripe, StriperProvider, Elements, CardElement, injectStripe } from 'react-stripe-elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIALSTATE = \"INITIAL\",\n      SUCCESSSTATE = \"COMPLETE\",\n      FAILEDSTATE = \"FAILED\";\n\nclass CreditCardForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      value: '',\n      status: INITIALSTATE\n    };\n  }\n\n  renderCreditCardInformation() {\n    const style = {\n      base: {\n        'fontSize': '20px',\n        'color': '#495057',\n        'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n      }\n    };\n\n    const usersavedcard = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-success text-center mx-auto\",\n          children: \"Use saved card?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 31\n    }, this);\n\n    const remembercardcheck = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row form-check textcenter\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        value: \"\",\n        id: \"remembercardcheck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"remembercardcheck\",\n        children: \"Remember Card?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }, this); // 뷰 반환\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [usersavedcard, /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-4\",\n        children: \"Payment Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cc-name\",\n              children: \"Name On Card:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"cc-name\",\n              name: \"cc-name\",\n              className: \"form-control\",\n              placeholder: \"Name on Card\",\n              onChange: this.handleInputChange,\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"card\",\n              children: \"Card Information:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n              id: \"card\",\n              className: \"form-control\",\n              style: style\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), remembercardcheck, /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success btn-large\",\n          children: this.props.operation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderSuccess() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-4 text-success\",\n        children: \"Request Successfull\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        tpye: \"submit\",\n        className: \"btn btn-success btn-large\",\n        onClick: () => {\n          this.props.toggle();\n        },\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderFailure() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-4 text-danger\",\n        children: \" Credit card Information invalid, try again or exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), this.renderCreditCardInformation()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"Handle submit called, with name: \" + this.state.value); // Strip API를 통해 발급\n\n    let {\n      token\n    } = await this.props.stripe.createToken({\n      name: this.state.value\n    });\n\n    if (token == null) {\n      console.log(\"invalid token\");\n      this.setState({\n        status: FAILEDSTATE\n      });\n      return;\n    }\n\n    let reponse = await fetch(\"/charge\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"text/plain\"\n      },\n      body: JSON.stringify({\n        token: token.id,\n        operation: this.props.operation\n      })\n    });\n    console.log(reponse.ok);\n\n    if (reponse.ok) {\n      console.log(\"Purchase Complete!\");\n      this.setState({\n        status: SUCCESSSTATE\n      });\n    }\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    let body = null;\n\n    switch (this.state.status) {\n      case SUCCESSSTATE:\n        body = this.renderSuccess();\n        break;\n\n      case FAILEDSTATE:\n        body = this.renderFailure();\n        break;\n\n      default:\n        body = this.renderCreditCardInformation();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default function CreditCardInformation(props) {\n  if (!props.show) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 16\n    }, this);\n  } // 스트라이프 API를 사용해 CreditCardForm를 추가하면 createToken() 메서드를 호출할 수 있다.\n\n\n  const CCFormWithStripe = injectStripe(CreditCardForm);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(StripeProvider, {\n      apiKey: \"pk_test_51JqdjpHqNVgKzGGZFZuBvitqdRPC5iN3nwYvdinqY2n5QcfozKRxCYT3sVQVRh26opBOFXz0IvbahgPC6IL7rqWh00ADHiTRK6\",\n      children: /*#__PURE__*/_jsxDEV(Elements, {\n        children: /*#__PURE__*/_jsxDEV(CCFormWithStripe, {\n          operation: props.operation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n_c = CreditCardInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreditCardInformation\");","map":{"version":3,"sources":["/Users/dewble/Workspace/React/gomusic/src/CreditCards.js"],"names":["React","jnjectStripe","StriperProvider","Elements","CardElement","injectStripe","INITIALSTATE","SUCCESSSTATE","FAILEDSTATE","CreditCardForm","Component","constructor","props","handleSubmit","bind","handleInputChange","state","value","status","renderCreditCardInformation","style","base","usersavedcard","remembercardcheck","operation","renderSuccess","toggle","renderFailure","event","preventDefault","console","log","token","stripe","createToken","name","setState","reponse","fetch","method","headers","body","JSON","stringify","id","ok","target","render","CreditCardInformation","show","CCFormWithStripe"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { jnjectStripe, StriperProvider, Elements, CardElement, injectStripe } from 'react-stripe-elements';\n\nconst INITIALSTATE = \"INITIAL\", SUCCESSSTATE = \"COMPLETE\", FAILEDSTATE = \"FAILED\";\nclass CreditCardForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.state = {\n            value: '',\n            status: INITIALSTATE\n        };\n    }\n\n    renderCreditCardInformation() {\n\n        const style = {\n            base: {\n                'fontSize': '20px',\n                'color': '#495057',\n                'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n            }\n        };\n\n        const usersavedcard = <div>\n            <div className=\"form-row text-center\">\n                <button type=\"button\" className=\"btn btn-outline-success text-center mx-auto\">Use saved card?</button>\n            </div>\n            <hr />\n        </div>\n\n        const remembercardcheck = <div className=\"form-row form-check textcenter\">\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remembercardcheck\" />\n            <label className=\"form-check-label\" htmlFor=\"remembercardcheck\">\n                Remember Card?\n            </label>        \n        </div>;\n        // 뷰 반환\n        return (\n            <div>\n                {usersavedcard}\n                <h5 className=\"mb-4\">Payment Info</h5>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"cc-name\">Name On Card:</label>\n                            <input id=\"cc-name\" name='cc-name' className=\"form-control\" placeholder='Name on Card' onChange={this.handleInputChange} type='text' />\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"card\">Card Information:</label>\n                            <CardElement id=\"card\" className=\"form-control\" style={style} />\n                        </div>\n                    </div>\n                    {remembercardcheck}\n                    <hr className=\"mb-4\" />\n                    <button type=\"submit\" className=\"btn btn-success btn-large\" >{this.props.operation}</button>\n                </form>\n            </div>\n        );\n    }\n\n    renderSuccess() {\n        return (\n            <div>\n                <h5 className=\"mb-4 text-success\">Request Successfull</h5>\n                <button tpye=\"submit\" className=\"btn btn-success btn-large\" onClick={() => {this.props.toggle() }}>OK</button>\n            </div>\n        );\n    }\n    renderFailure() {\n        return (\n            <div>\n                <h5 className=\"mb-4 text-danger\"> Credit card Information invalid, try again or exit</h5>\n                {this.renderCreditCardInformation()}\n            </div>\n        );\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        console.log(\"Handle submit called, with name: \" + this.state.value);\n        // Strip API를 통해 발급\n        let { token } = await this.props.stripe.createToken({ name: this.state.value});\n        if (token == null) {\n            console.log(\"invalid token\");\n            this.setState({ status: FAILEDSTATE });\n            return;\n        }\n        let reponse = await fetch(\"/charge\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"text/plain\"},\n            body: JSON.stringify({\n                token: token.id,\n                operation: this.props.operation,\n            })\n        });\n        console.log(reponse.ok);\n        if (reponse.ok) {\n            console.log(\"Purchase Complete!\");\n            this.setState({ status: SUCCESSSTATE});\n        }\n    }\n\n\n    handleInputChange(event) {\n        this.setState({\n            value: event.target.value\n        })\n    }\n\n    render() {\n\n        let body = null;\n        switch (this.state.status) {\n            case SUCCESSSTATE:\n                body = this.renderSuccess();\n                break;\n            case FAILEDSTATE:\n                body = this.renderFailure();\n                break;\n            default:\n                body = this.renderCreditCardInformation();\n        }\n\n        return (\n            <div>\n                {body}\n            </div>\n        );\n    }\n}\nexport default function CreditCardInformation(props) {\n    if(!props.show) {\n        return <div/>;\n    }\n    // 스트라이프 API를 사용해 CreditCardForm를 추가하면 createToken() 메서드를 호출할 수 있다.\n    const CCFormWithStripe = injectStripe(CreditCardForm);\n    return (\n        <div>\n            {/*stripe provider*/}\n            <StripeProvider apiKey=\"pk_test_51JqdjpHqNVgKzGGZFZuBvitqdRPC5iN3nwYvdinqY2n5QcfozKRxCYT3sVQVRh26opBOFXz0IvbahgPC6IL7rqWh00ADHiTRK6\">\n                <Elements>\n                    <CCFormWithStripe operation={props.operation} />\n                </Elements>\n            </StripeProvider>\n        </div>\n    )   \n}\n\n"]},"metadata":{},"sourceType":"module"}